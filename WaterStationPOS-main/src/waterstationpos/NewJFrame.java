/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package waterstationpos;

import java.util.List;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author allen
 */
public class NewJFrame extends javax.swing.JFrame {

    List<Product> cart = new ArrayList<>();

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        addTableModelListenerToCartJTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        Sales = new javax.swing.JPanel();
        SalesPanel = new javax.swing.JPanel();
        ProductButton1 = new javax.swing.JButton();
        ProductButton6 = new javax.swing.JButton();
        ProductButton5 = new javax.swing.JButton();
        ProductButton4 = new javax.swing.JButton();
        ProductButton2 = new javax.swing.JButton();
        ProductButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        CartJTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ReceiptTextArea = new javax.swing.JTextArea();
        UserOptionPanel = new javax.swing.JPanel();
        checkoutButton = new javax.swing.JButton();
        modifyQtyButton = new javax.swing.JButton();
        removeFromCartButton = new javax.swing.JButton();
        discountButton = new javax.swing.JButton();
        modifyPriceButton = new javax.swing.JButton();
        addCustomProductButton = new javax.swing.JButton();
        InventoryTab = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        InventoryJTable = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        addStocksButton = new javax.swing.JButton();
        reduceStocksButton = new javax.swing.JButton();
        modifyInventoryPriceButton = new javax.swing.JButton();
        reduceStocksButton1 = new javax.swing.JButton();
        ReportTab = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        generateReportJTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        reportTextArea = new java.awt.TextArea();
        exportReportToPDFButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1280, 720));
        jTabbedPane1.setRequestFocusEnabled(false);

        Sales.setBackground(new java.awt.Color(0, 0, 51));

        SalesPanel.setBackground(new java.awt.Color(153, 153, 153));

        ProductButton1.setText("Slim Gallon");
        ProductButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductButton1ActionPerformed(evt);
            }
        });

        ProductButton6.setText("Product");

        ProductButton5.setText("Product");

        ProductButton4.setText("Pet Bottle");

        ProductButton2.setText("Round Gallon");
        ProductButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductButton2ActionPerformed(evt);
            }
        });

        ProductButton3.setText("Alkaline");
        ProductButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SalesPanelLayout = new javax.swing.GroupLayout(SalesPanel);
        SalesPanel.setLayout(SalesPanelLayout);
        SalesPanelLayout.setHorizontalGroup(
            SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SalesPanelLayout.createSequentialGroup()
                .addContainerGap(200, Short.MAX_VALUE)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SalesPanelLayout.createSequentialGroup()
                        .addComponent(ProductButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ProductButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SalesPanelLayout.createSequentialGroup()
                        .addComponent(ProductButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ProductButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProductButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(173, 173, 173))
        );
        SalesPanelLayout.setVerticalGroup(
            SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SalesPanelLayout.createSequentialGroup()
                .addContainerGap(120, Short.MAX_VALUE)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProductButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(72, 72, 72)
                .addGroup(SalesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProductButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProductButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(106, 106, 106))
        );

        CartJTable.setBackground(new java.awt.Color(153, 153, 153));
        CartJTable.setForeground(new java.awt.Color(0, 0, 0));
        CartJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(CartJTable);
        if (CartJTable.getColumnModel().getColumnCount() > 0) {
            CartJTable.getColumnModel().getColumn(0).setResizable(false);
            CartJTable.getColumnModel().getColumn(1).setResizable(false);
            CartJTable.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        ReceiptTextArea.setEditable(false);
        ReceiptTextArea.setBackground(new java.awt.Color(153, 153, 153));
        ReceiptTextArea.setColumns(20);
        ReceiptTextArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ReceiptTextArea.setForeground(new java.awt.Color(255, 255, 255));
        ReceiptTextArea.setRows(5);
        jScrollPane2.setViewportView(ReceiptTextArea);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );

        UserOptionPanel.setBackground(new java.awt.Color(153, 153, 153));

        checkoutButton.setText("CHECKOUT");
        checkoutButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        checkoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkoutButtonActionPerformed(evt);
            }
        });

        modifyQtyButton.setText("MODIFY QTY");
        modifyQtyButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifyQtyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyQtyButtonActionPerformed(evt);
            }
        });

        removeFromCartButton.setText("REMOVE FROM CART");
        removeFromCartButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        removeFromCartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeFromCartButtonActionPerformed(evt);
            }
        });

        discountButton.setText("DISCOUNT");
        discountButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        discountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountButtonActionPerformed(evt);
            }
        });

        modifyPriceButton.setText("MODIFY PRICE");
        modifyPriceButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifyPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyPriceButtonActionPerformed(evt);
            }
        });

        addCustomProductButton.setText("ADD CUSTOM PRODUCT");
        addCustomProductButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addCustomProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserOptionPanelLayout = new javax.swing.GroupLayout(UserOptionPanel);
        UserOptionPanel.setLayout(UserOptionPanelLayout);
        UserOptionPanelLayout.setHorizontalGroup(
            UserOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UserOptionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(UserOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(UserOptionPanelLayout.createSequentialGroup()
                        .addComponent(checkoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeFromCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(modifyQtyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UserOptionPanelLayout.createSequentialGroup()
                        .addComponent(discountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(addCustomProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16)
                        .addComponent(modifyPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(221, 221, 221))
        );
        UserOptionPanelLayout.setVerticalGroup(
            UserOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserOptionPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(UserOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeFromCartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifyQtyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(UserOptionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(discountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifyPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCustomProductButton, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        javax.swing.GroupLayout SalesLayout = new javax.swing.GroupLayout(Sales);
        Sales.setLayout(SalesLayout);
        SalesLayout.setHorizontalGroup(
            SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesLayout.createSequentialGroup()
                .addGroup(SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SalesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SalesLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SalesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(UserOptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        SalesLayout.setVerticalGroup(
            SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SalesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SalesLayout.createSequentialGroup()
                        .addComponent(SalesPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(UserOptionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SalesLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(11, 11, 11))
        );

        jTabbedPane1.addTab("Sales", Sales);

        InventoryTab.setBackground(new java.awt.Color(0, 0, 51));

        InventoryJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Item", "Stocks", "Price"
            }
        ));
        jScrollPane4.setViewportView(InventoryJTable);

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));

        addStocksButton.setText("ADD STOCKS");
        addStocksButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStocksButtonActionPerformed(evt);
            }
        });

        reduceStocksButton.setText("REDUCE STOCKS");
        reduceStocksButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reduceStocksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reduceStocksButtonActionPerformed(evt);
            }
        });

        modifyInventoryPriceButton.setText("MODIFY PRICE");
        modifyInventoryPriceButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        modifyInventoryPriceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyInventoryPriceButtonActionPerformed(evt);
            }
        });

        reduceStocksButton1.setText("ADD NEW PRODUCT");
        reduceStocksButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        reduceStocksButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reduceStocksButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(reduceStocksButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modifyInventoryPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reduceStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(275, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(addStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(reduceStocksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(reduceStocksButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(modifyInventoryPriceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout InventoryTabLayout = new javax.swing.GroupLayout(InventoryTab);
        InventoryTab.setLayout(InventoryTabLayout);
        InventoryTabLayout.setHorizontalGroup(
            InventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 705, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        InventoryTabLayout.setVerticalGroup(
            InventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InventoryTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(InventoryTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(InventoryTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 4, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Inventory", InventoryTab);

        ReportTab.setBackground(new java.awt.Color(0, 0, 51));

        generateReportJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Item", "QTY Sold", "Total Sales"
            }
        ));
        jScrollPane3.setViewportView(generateReportJTable);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));

        exportReportToPDFButton.setText("EXPORT REPORT");
        exportReportToPDFButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        exportReportToPDFButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportReportToPDFButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportTextArea, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(136, Short.MAX_VALUE)
                .addComponent(exportReportToPDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(133, 133, 133))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(reportTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(exportReportToPDFButton, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout ReportTabLayout = new javax.swing.GroupLayout(ReportTab);
        ReportTab.setLayout(ReportTabLayout);
        ReportTabLayout.setHorizontalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReportTabLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ReportTabLayout.setVerticalGroup(
            ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReportTabLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ReportTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Report", ReportTab);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ProductButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductButton2ActionPerformed

    private void ProductButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductButton1ActionPerformed
    // Retrieve product details (replace with your actual product details)
    Product product = new Product("Slim Gallon", 0.0); // Initial price is set to 0.0 as it will be defined by user input

    // Prompt the user for quantity
    String quantityInput = JOptionPane.showInputDialog(this, "Enter quantity for " + product.getName() + ":");

    // Check if user canceled the input or entered invalid input for quantity
    if (quantityInput != null && !quantityInput.isEmpty()) {
        try {
            int quantity = Integer.parseInt(quantityInput);
            if (quantity > 0) {
                // Check if the product already exists in the cart
                boolean productFound = false;
                for (int i = 0; i < cart.size(); i++) {
                    Product existingProduct = cart.get(i);
                    if (existingProduct.getName().equals(product.getName())) {
                        // Update quantity of existing product
                        existingProduct.setQuantity(existingProduct.getQuantity() + quantity);
                        // Update quantity in the cart table
                        CartJTable.setValueAt(existingProduct.getQuantity(), i, 1);
                        productFound = true;
                        break;
                    }
                }
                if (!productFound) {
                    // Create a combo box for price selection
                    JComboBox<Double> priceComboBox = new JComboBox<>(new Double[]{20.0, 25.0});
                    priceComboBox.setSelectedIndex(0); // Default selection

                    // Custom panel to hold the combo box
                    JPanel panel = new JPanel();
                    panel.add(new JLabel("Select price:"));
                    panel.add(priceComboBox);

                    // Show the dialog with the combo box
                    int result = JOptionPane.showConfirmDialog(this, panel, "Select Price", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
                    if (result == JOptionPane.OK_OPTION) {
                        double price = (Double) priceComboBox.getSelectedItem();

                        // Add product to cart with the specified quantity and price
                        product.setQuantity(quantity);
                        product.setPrice(price);
                        cart.add(product);
                        // Add new row to cart table
                        DefaultTableModel model = (DefaultTableModel) CartJTable.getModel();
                        model.addRow(new Object[]{product.getName(), quantity, product.getPrice()});
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Quantity must be a positive integer.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid input. Please enter a valid integer quantity.");
        }
    }
    }//GEN-LAST:event_ProductButton1ActionPerformed

    private void checkoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutButtonActionPerformed

    private void modifyQtyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyQtyButtonActionPerformed
        // Get the selected row index in the CartJTable
        int selectedRowIndex = CartJTable.getSelectedRow();

        // Check if a row is selected
        if (selectedRowIndex != -1) { // -1 indicates no row is selected
            // Prompt the user to enter the new quantity
            String input = JOptionPane.showInputDialog(this, "Enter the new quantity:", "Modify Quantity", JOptionPane.QUESTION_MESSAGE);

            // Check if the user entered a valid input
            if (input != null && !input.isEmpty()) {
                try {
                    // Parse the input to an integer
                    int newQuantity = Integer.parseInt(input);

                    // Check if the new quantity is valid (greater than 0)
                    if (newQuantity > 0) {
                        // Update the quantity in the CartJTable
                        CartJTable.getModel().setValueAt(newQuantity, selectedRowIndex, 1); // Assuming quantity is in the second column
                        // Update the receipt after modifying the quantity
                        printReceipt();
                    } else {
                        JOptionPane.showMessageDialog(this, "Quantity must be greater than 0.", "Invalid Quantity", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid integer.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            // If no row is selected, show a message to the user
            JOptionPane.showMessageDialog(this, "Please select a row to modify.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
        }    }//GEN-LAST:event_modifyQtyButtonActionPerformed

    private void removeFromCartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeFromCartButtonActionPerformed
            // Get the selected row index in the CartJTable
    int selectedRowIndex = CartJTable.getSelectedRow();

    // Check if a row is selected
    if (selectedRowIndex != -1) { // -1 indicates no row is selected
        // Remove the selected product from the cart list
        cart.remove(selectedRowIndex);

        // Remove the selected row from the CartJTable
        DefaultTableModel model = (DefaultTableModel) CartJTable.getModel();
        model.removeRow(selectedRowIndex);

        // Update the receipt after removing the item
        printReceipt();
    } else {
        // If no row is selected, show a message to the user
        JOptionPane.showMessageDialog(this, "Please select a row to remove.", "No Row Selected", JOptionPane.WARNING_MESSAGE);    
        }    }//GEN-LAST:event_removeFromCartButtonActionPerformed

    private void discountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountButtonActionPerformed

    private void modifyPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyPriceButtonActionPerformed
        // Get the selected row index in the CartJTable
        int selectedRowIndex = CartJTable.getSelectedRow();

        // Check if a row is selected
        if (selectedRowIndex != -1) { // -1 indicates no row is selected
            // Prompt the user to enter the new price
            String input = JOptionPane.showInputDialog(this, "Enter the new price:", "Modify Price", JOptionPane.QUESTION_MESSAGE);

            // Check if the user entered a valid input
            if (input != null && !input.isEmpty()) {
                try {
                    // Parse the input to a double
                    double newPrice = Double.parseDouble(input);

                    // Check if the new price is valid (greater than 0)
                    if (newPrice > 0) {
                        // Update the price in the CartJTable
                        CartJTable.getModel().setValueAt(newPrice, selectedRowIndex, 2); // Assuming price is in the third column (index 2)
                        // Update the receipt after modifying the price
                        printReceipt();
                    } else {
                        JOptionPane.showMessageDialog(this, "Price must be greater than 0.", "Invalid Price", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(this, "Please enter a valid number.", "Invalid Input", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            // If no row is selected, show a message to the user
            JOptionPane.showMessageDialog(this, "Please select a row to modify.", "No Row Selected", JOptionPane.WARNING_MESSAGE);
        }    }//GEN-LAST:event_modifyPriceButtonActionPerformed

    private void addCustomProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomProductButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addCustomProductButtonActionPerformed

    private void exportReportToPDFButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportReportToPDFButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_exportReportToPDFButtonActionPerformed

    private void addStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStocksButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addStocksButtonActionPerformed

    private void reduceStocksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reduceStocksButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reduceStocksButtonActionPerformed

    private void modifyInventoryPriceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyInventoryPriceButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_modifyInventoryPriceButtonActionPerformed

    private void reduceStocksButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reduceStocksButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reduceStocksButton1ActionPerformed

    private void ProductButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductButton3ActionPerformed

    //METHODS
    private void printReceipt() {
        // Clear the ReceiptTextArea before printing a new receipt
        ReceiptTextArea.setText("");

        // Get the table model of CartJTable
        DefaultTableModel model = (DefaultTableModel) CartJTable.getModel();

        // Iterate through the rows of the table
        for (int i = 0; i < model.getRowCount(); i++) {
            String itemName = model.getValueAt(i, 0).toString(); // Get item name from the first column
            int quantity = Integer.parseInt(model.getValueAt(i, 1).toString()); // Get quantity from the second column
            double price = Double.parseDouble(model.getValueAt(i, 2).toString()); // Get price from the third column

            // Format item details and append to the ReceiptTextArea
            String itemDetails = itemName + " Quantity: " + quantity + " : Php " + (quantity * price) + "\n";
            ReceiptTextArea.append(itemDetails);
        }
    }

    //ADDITIONAL LISTENERS
    private void addTableModelListenerToCartJTable() {
        // Add a TableModelListener to CartJTable's model
        CartJTable.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() == TableModelEvent.INSERT || e.getType() == TableModelEvent.UPDATE) {
                    // If a row is inserted or updated, update the receipt
                    printReceipt();
                }
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable CartJTable;
    private javax.swing.JTable InventoryJTable;
    private javax.swing.JPanel InventoryTab;
    private javax.swing.JButton ProductButton1;
    private javax.swing.JButton ProductButton2;
    private javax.swing.JButton ProductButton3;
    private javax.swing.JButton ProductButton4;
    private javax.swing.JButton ProductButton5;
    private javax.swing.JButton ProductButton6;
    private javax.swing.JTextArea ReceiptTextArea;
    private javax.swing.JPanel ReportTab;
    private javax.swing.JPanel Sales;
    private javax.swing.JPanel SalesPanel;
    private javax.swing.JPanel UserOptionPanel;
    private javax.swing.JButton addCustomProductButton;
    private javax.swing.JButton addStocksButton;
    private javax.swing.JButton checkoutButton;
    private javax.swing.JButton discountButton;
    private javax.swing.JButton exportReportToPDFButton;
    private javax.swing.JTable generateReportJTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton modifyInventoryPriceButton;
    private javax.swing.JButton modifyPriceButton;
    private javax.swing.JButton modifyQtyButton;
    private javax.swing.JButton reduceStocksButton;
    private javax.swing.JButton reduceStocksButton1;
    private javax.swing.JButton removeFromCartButton;
    private java.awt.TextArea reportTextArea;
    // End of variables declaration//GEN-END:variables
}
